import os
import hashlib
import magic
from PyPDF2 import PdfFileReader

data = []
labels = []

malware_folder = ""
non_malware_folder = ""

def extract_pdf_features(file_path):
    features = {}

    # Basic file attributes
    features['file_size'] = os.path.getsize(file_path)

    # Calculate hash
    hash_md5 = hashlib.md5()
    with open(file_path, 'rb') as file:
        for chunk in iter(lambda: file.read(4096), b''):
            hash_md5.update(chunk)
    features['md5_hash'] = hash_md5.hexdigest()

    # Count pages in PDF
    try:
        with open(file_path, 'rb') as file:
            pdf_reader = PdfFileReader(file)
            features['num_pages'] = pdf_reader.numPages
    except Exception as e:
        print("Error:", e)
        features['num_pages'] = 0

    return features


#load non malware samples
for file_name in os.listdir(non_malware_folder):
    fuke_path = os.path.join(non_malware_folder, file_name)

    file_type = magic.Magic()
    detected_type = file_type.from_file(file_path)

    if 'CDF V2 Document' in detected_type:
        cdf_features = extract_cdf_features(file_path)
        data.append(cdf_features)
        labels.append(0) #0 for non malware

#create a dataframe
df = pd.DataFrame(data)
df['label'] = labels
